<pragmas>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="260" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_common.h" line="567" pragmaType="inline" parentfunction="ssdm_int<64, false>::ssdm_int(unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="hls/ddrbenchmark2.cpp" line="16" pragmaType="pipeline" parentfunction="ddrbenchmark2" off="0" ii="-1" rewind="0" style=""/>
<pragma file="hls/ddrbenchmark2.cpp" line="6" pragmaType="interface" parentfunction="ddrbenchmark2" mode="m_axi" port="input" bundle="gmem" offset="slave" name="" depth="1000" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1"/>
<pragma file="hls/ddrbenchmark2.cpp" line="7" pragmaType="interface" parentfunction="ddrbenchmark2" mode="m_axi" port="output" bundle="gmem" offset="slave" name="" depth="1000" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1"/>
<pragma file="hls/ddrbenchmark2.cpp" line="8" pragmaType="interface" parentfunction="ddrbenchmark2" mode="s_axilite" port="input" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="hls/ddrbenchmark2.cpp" line="9" pragmaType="interface" parentfunction="ddrbenchmark2" mode="s_axilite" port="output" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="hls/ddrbenchmark2.cpp" line="10" pragmaType="interface" parentfunction="ddrbenchmark2" mode="s_axilite" port="" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int.h" line="333" pragmaType="inline" parentfunction="ap_uint<64>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
</pragmas>
